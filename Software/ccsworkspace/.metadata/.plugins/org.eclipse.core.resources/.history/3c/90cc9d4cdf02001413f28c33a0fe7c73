/*
 *main.c
 *Version: 1.0
 *Parker Dillmann
 *The Longhorn Engineer (c) 2013 
 *www.longhornengineer.com
 *
 *Check bottom of file for License.
 * 
 *This is a main.c file of the UART Hardware demo using USCI on the MSP430G2553 microcontroller.
 *Set your baud rate in your terminal to 9600 8N1.
 *When using your TI MSP-430 LaunchPad you will need to cross the TXD and RXD jumpers.
 *
 */

#include "msp430g2553.h"
#include "uart.h"

char test_string[8];
volatile unsigned int adc_val;
char ADC_Str[8];

char *convertADC(int val,int dec_place) {
	int digit;
	int cVal;
	char *ptr;
	int tens;

	ptr = ADC_Str;
	cVal = val;
	digit = 1000;
	while(digit>=1) {
		if(dec_place == digit) {
			*(ptr++) = '.';				// Add a decimal place if given
		}
		if(digit > cVal) {
			tens = 0;
		} else {
			tens = cVal / digit;
		}
		*(ptr++) = '0' + tens;
		cVal -= (tens * digit);
		digit /= 10;
	}
	*ptr = 0;							// Terminate the string
	return ADC_Str;
}


int main(void)
{
    WDTCTL = WDTPW + WDTHOLD; 			//Stop WDT
    BCSCTL1 = CALBC1_8MHZ; 				//Set DCO to 8Mhz
    DCOCTL = CALDCO_8MHZ; 				//Set DCO to 8Mhz

    uart_init();						//Initialize the UART connection

    __enable_interrupt();				//Interrupts Enabled

    //uart_puts((char *)"This is a Test of the MSP-430 Hardware UART Broadcast System\n\r");

    //uart_puts((char *)"PRESS any key to start the test... ");

    //unsigned char c = uart_getc();

    //uart_putc(c);

    //uart_puts((char *)"\n\rTest OK!\n\r");
    //uart_puts((char *)"\n\rEnter a String of 8 Chars...\n\r");

    while(1)
    {
    	//uart_gets(test_string, 8);
    	//uart_puts(test_string);
    	//uart_puts((char *)"\n\r");
		ADC10CTL0 &= ~ENC;							// Switch off ADC.. (Can't set if enabled)

		//ADC10CTL1 = INCH_10 + ADC10DIV_0;			// Select Temperature channel and Div by 1 clock
		//ADC10CTL0 = SREF_1 + ADC10SHT_3 + REFON + ADC10ON + ADC10IE;
													// Range to VRef+, Max Sample and hold time
													// turn on reference, turn on the ADC and enable Interrupts
		//__delay_cycles(40);							// Allow time for the reference voltage to settle
		//ADC10CTL0 |= ENC + ADC10SC;					// enable the encoder and start conversion
		//__bis_SR_register(CPUOFF + GIE);			// Turn off the CPU and allow interrupts (ISR turns on CPU)

		//adc_val = ADC10MEM;							// Put the ADC value into var
		//LCD_writeString
		//uart_puts(convertADC(adc_val,-1));		// Write out the converted calue

    }
}

/*
â”Œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”�
â”‚                           TERMS OF USE: MIT License                                  â”‚
â”œâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚Permission is hereby granted, free of charge, to any person obtaining a copy of this  â”‚
â”‚software and associated documentation files (the "Software"), to deal in the Software â”‚
â”‚without restriction, including without limitation the rights to use, copy, modify,    â”‚
â”‚merge, publish, distribute, sublicense, and/or sell copies of the Software, and to    â”‚
â”‚permit persons to whom the Software is furnished to do so, subject to the following   â”‚
â”‚conditions:                                                                           â”‚
â”‚                                                                                      â”‚
â”‚The above copyright notice and this permission notice shall be included in all copies â”‚
â”‚or substantial portions of the Software.                                              â”‚
â”‚                                                                                      â”‚
â”‚THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,   â”‚
â”‚INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A         â”‚
â”‚PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT    â”‚
â”‚HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION     â”‚
â”‚OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE        â”‚
â”‚SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                â”‚
â””â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”˜
*/
